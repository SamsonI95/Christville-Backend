name: Deploy Go Application

on: 
  push:
    branches: 
      - deploy-to-ec2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DATABASE_NAME=${{secrets.DATABASE_NAME}}" >> .env
          echo "MONGODB_URI=${{secrets.MONGODB_URI}}" >> .env

      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Build Go app Docker image
        run: docker build -t jefferyokesamuel/christville .

      - name: Push Go app image to Docker Hub
        run: docker push jefferyokesamuel/christville:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull Go app Docker image
        run: docker pull jefferyokesamuel/christville:latest

      - name: List local Docker images
        run: docker images

      - name: Verify Go app image exists
        run: docker images | grep "jefferyokesamuel/christville"

      - name: Set up Docker Compose
        run: |
          cat <<EOF > docker-compose.yml
          version: "3.9"
          services:
            app:
              image: jefferyokesamuel/christville:latest
              container_name: christ-container
              environment:
                DATABASE_NAME: Christville
              ports:
                - "8080:8080"
              depends_on:
                - nginx

            nginx:
              image: nginx:latest
              container_name: nginx-container
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf:ro
              ports:
                - "80:80"
              depends_on:
                - app
          EOF

      - name: Set up NGINX configuration
        run: |
          cat <<EOF > nginx.conf
          events {}
          http {
              server {
                  listen 80;

                  location / {
                      proxy_pass http://app:8080;
                      proxy_set_header Host \$host;
                      proxy_set_header X-Real-IP \$remote_addr;
                      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  }
              }
          }
          EOF

      - name: Deploy with Docker Compose
        run: |
          docker-compose down || true
          docker-compose up -d
